services:
  docker-revp:
    build: .
    container_name: docker-revp
    labels:
      - "snadboy.revp.container-port=8080" # Uses the CONTAINER port (8080)
      - "snadboy.revp.domain=revp.snadboy.com"
      - "snadboy.revp.backend-proto=http"
      - "snadboy.revp.backend-path=/"
      - "snadboy.revp.force-ssl=true" # Force SSL for the API
    user: "1000:1000"
    ports:
      - "8081:8085"
    environment:
      # Required environment variables (set in .env file)
      - DOCKER_HOSTS=${DOCKER_HOSTS}
      - SSH_USER=${SSH_USER}

      # Optional configuration (defaults provided)
      - CADDY_API_URL=${CADDY_API_URL:-http://vm-switchboard.snadboy.com:2019}
      - RECONCILE_INTERVAL=${RECONCILE_INTERVAL:-300}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-10}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT:-5}
      - API_PORT=${API_PORT:-8080}
      - API_HOST=${API_HOST:-0.0.0.0}
    volumes:
      # Mount log directory for persistence
      - ./logs:/var/log/docker-revp
      # Mount SSH private key for Docker host connections
      - /home/revp/.ssh/id_revp:/home/app/.ssh/docker_monitor_key:ro
      # Mount SSH directory for debugging (optional)
      - ./ssh-debug:/root/.ssh-debug
    restart: unless-stopped
    # depends_on:
    #   - caddycd

    # Health check
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    environment:
      - CADDY_ADMIN=0.0.0.0:2019 # Allow external access to admin API
    labels:
      # Caddy admin API access
      - "snadboy.revp.container-port=2019"
      - "snadboy.revp.domain=caddy-api.snadboy.com"
      - "snadboy.revp.backend-proto=http"
      - "snadboy.revp.backend-path=/"
      - "snadboy.revp.force-ssl=true" 
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019" # Admin API
    volumes:
      - /home/snadboy/docker/docker-revp/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    restart: unless-stopped

    # Example service 1: Whoami
  whoami1:
    image: traefik/whoami
    container_name: whoami1
    ports:
      - "8001:80" # Example: maps host port 8001 to container port 80
    labels:
      - "snadboy.revp.container-port=80" # Uses the CONTAINER port (80)
      - "snadboy.revp.domain=whoami1.snadboy.com"
      - "snadboy.revp.backend-proto=http"
      - "snadboy.revp.backend-path=/"
      - "snadboy.revp.force-ssl=true"
      - "snadboy.revp.support-websocket=false" 

    restart: unless-stopped

  # Example service 2: Whoami
  whoami2:
    image: traefik/whoami
    container_name: whoami2
    ports:
      - "8002:80" # Example: maps host port 8002 to container port 80
    labels:
      - "snadboy.revp.container-port=80" # Uses the CONTAINER port (80)
      - "snadboy.revp.domain=whoami2.snadboy.com"
      - "snadboy.revp.backend-proto=http"
      - "snadboy.revp.backend-path=/"
      - "snadboy.revp.force-ssl=true"
      - "snadboy.revp.support-websocket=true" 
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:
